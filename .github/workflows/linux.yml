name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  CH_SERVER_VERSION: 21.3.17.2
  CONAN_USER_HOME: "${{ github.workspace }}/conan/"
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        compiler: [clang-6, clang-10-libc++, gcc-7, gcc-8, gcc-9]
        ssl: [ssl_ON, ssl_OFF]
        dependencies: [dependencies_SYSTEM, dependencies_BUILT_IN]
        include:
        - compiler: clang-6
          INSTALL: clang-6.0
          COMPILER_CONAN_SETTING: >-
            -s compiler=clang
            -s compiler.version=6.0
            -s compiler.libcxx=libstdc++11
            -e CC=clang-6.0 -e CXX=clang++-6.0

        - compiler: clang-10-libc++
          INSTALL: clang-10 libc++-dev
          COMPILER_CONAN_SETTING: >-
            -s compiler=clang
            -s compiler.version=10
            -s compiler.libcxx=libc++
            -e CC=clang-10 -e CXX=clang++-10

        - compiler: gcc-7
          INSTALL: gcc-7 g++-7
          COMPILER_CONAN_SETTING: >-
            -s compiler=gcc
            -s compiler.version=7
            -s compiler.libcxx=libstdc++11

        - compiler: gcc-8
          INSTALL: gcc-8 g++-8
          COMPILER_CONAN_SETTING: >-
            -s compiler=gcc
            -s compiler.version=8
            -s compiler.libcxx=libstdc++11

        - compiler: gcc-9
          INSTALL: gcc-9 g++-9
          COMPILER_CONAN_SETTING: >-
            -s compiler=gcc
            -s compiler.version=9
            -s compiler.libcxx=libstdc++11

        - ssl: ssl_ON
          SSL_CONAN_OPTION: -o with_openssl=True

        - ssl: ssl_OFF
          SSL_CONAN_OPTION: -o with_openssl=False

        - dependencies: dependencies_SYSTEM
          DEPENDENCIES_CONAN_OPTIONS: >-
            -o with_system_lz4=True
            -o with_system_cityhash=True
            -o with_system_abseil=True

        - dependencies: dependencies_BUILT_IN
          DEPENDENCIES_CONAN_OPTIONS: >-
            -o with_system_lz4=False
            -o with_system_cityhash=False
            -o with_system_abseil=False

    steps:
    - uses: actions/checkout@v2

    - uses: turtlebrowser/get-conan@main

    - uses: actions/cache@v3.0.2
      with:
        key: ${{runner.os}}-${{matrix.ssl}}-${{matrix.dependencies}}-${{hashFiles('conanfile.py')}}
        path: ${{env.CONAN_USER_HOME}}

    - name: Install dependencies
      run: |
        sudo apt-get install -y cmake ${{matrix.INSTALL}}

    - name: Configure & Build project
      run: |
        mkdir -p ${{github.workspace}}/build && cd ${{github.workspace}}/build

        conan install \
          -o build_tests=True \
          ${{matrix.SSL_CONAN_OPTION}} \
          ${{matrix.DEPENDENCIES_CONAN_OPTIONS}} \
          -s build_type=${{env.BUILD_TYPE}} \
          ${{matrix.COMPILER_CONAN_SETTING}} \
          -b missing \
          ${{github.workspace}}

        conan build ${{github.workspace}}

    - name: Start ClickHouse server
      run: |
        sudo apt-get install apt-transport-https ca-certificates dirmngr
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E0C56BD4
        echo "deb https://repo.clickhouse.com/deb/stable/ main/" | sudo tee /etc/apt/sources.list.d/clickhouse.list
        sudo apt-get update
        sudo apt-get install -y \
            clickhouse-server=${{env.CH_SERVER_VERSION}} \
            clickhouse-client=${{env.CH_SERVER_VERSION}} \
            clickhouse-common-static=${{env.CH_SERVER_VERSION}}
        sudo service clickhouse-server start

    - name: Test
      working-directory: ${{github.workspace}}/build/ut
      run: ./clickhouse-cpp-ut
