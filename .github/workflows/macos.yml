name: macOS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  CLICKHOUSE_USER: clickhouse_cpp_cicd
  CLICKHOUSE_PASSWORD: clickhouse_cpp_cicd
  CONAN_USER_HOME: "${{ github.workspace }}/conan/"
jobs:
  build:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        ssl: [ssl_ON, ssl_OFF]
        dependencies: [dependencies_SYSTEM, dependencies_BUILT_IN]
        include:
        - ssl: ssl_ON
          # Install brew openssl to gain access to system certificates, but link with the
          # conan version
          SSL_BREW_INSTALL: openssl
          SSL_CONAN_OPTION: -o with_openssl=True -o openssl:openssldir=/usr/local/etc/openssl@3

        - ssl: ssl_OFF
          SSL_CONAN_OPTION: -o with_openssl=False

        - dependencies: dependencies_SYSTEM
          DEPENDENCIES_CONAN_OPTIONS: >-
            -o with_system_lz4=True
            -o with_system_cityhash=True
            -o with_system_abseil=True

        - dependencies: dependencies_BUILT_IN
          DEPENDENCIES_CONAN_OPTIONS: >-
            -o with_system_lz4=False
            -o with_system_cityhash=False
            -o with_system_abseil=False

    steps:
    - uses: actions/checkout@v2

    - uses: turtlebrowser/get-conan@main

    - uses: actions/cache@v3.0.2
      with:
        key: ${{runner.os}}-${{matrix.ssl}}-${{matrix.dependencies}}-${{hashFiles('conanfile.py')}}
        path: ${{env.CONAN_USER_HOME}}

    - name: Install dependencies
      run: |
        brew install cmake ${{matrix.SSL_BREW_INSTALL}} 

    - name: Configure & Build project
      run: |
        mkdir -p ${{github.workspace}}/build && cd ${{github.workspace}}/build

        conan install \
          -o build_tests=True \
          ${{matrix.SSL_CONAN_OPTION}} \
          ${{matrix.DEPENDENCIES_CONAN_OPTIONS}} \
          -s build_type=${{env.BUILD_TYPE}} \
          -b missing \
          ${{github.workspace}}

        conan build ${{github.workspace}}

    - name: Start tls offoader proxy
      # that mimics non-secure clickhouse running on localhost
      # by tunneling queries to remote tls server
      # (needed because we can't start real clickhouse instance on macOS)
      run: |
            wget https://github.com/filimonov/go-tlsoffloader/releases/download/v0.1.2/go-tlsoffloader_0.1.2_Darwin_x86_64.tar.gz
            tar -xvzf go-tlsoffloader_0.1.2_Darwin_x86_64.tar.gz
            ./go-tlsoffloader -l localhost:9000 -b github.demo.trial.altinity.cloud:9440 &

    - name: Test
      working-directory: ${{github.workspace}}/build/ut
      env:
        # It is impossible to start CH server in docker on macOS due to github actions limitations,
        # so limit tests to ones that do no require server interaction.
        GTEST_FILTER_ONLY_LOCAL: "-Client/*"
      run: ./clickhouse-cpp-ut
